/**
 * SilverFir Bot üå≤ - [Node.js Release]
 * 
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API Tinkoff Invest
 * ===========================================================
 * 
 * –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ T-Invest API: https://russianinvestments.github.io/investAPI/swagger-ui/
 * 
 * @version 1.0.0
 * @license Apache-2.0
 * @author –ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω [Mikhail Shardin]
 * @site https://shardin.name/
 * @repository https://github.com/empenoso/SilverFir-TradingBot
 * 
 * Last updated: 03.11.2024
 */


const secrets = require('../../config/secrets'); // –ö–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
const logger = require('../services/logService'); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª –∏ –∫–æ–Ω—Å–æ–ª—å
const logFunctionName = require('../services/logFunctionName'); // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏

const moment = require('moment'); // –ò—Å–ø–æ–ª—å–∑—É—é moment.js –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç
const axios = require('axios');

class TinkoffClient {
    constructor(apiToken) {
        this.apiToken = apiToken;
        // —Å–µ—Ä–≤–∏—Å –ø–µ—Å–æ—á–Ω–∏—Ü—ã
        this.apiUrl = 'https://sandbox-invest-public-api.tinkoff.ru:443/rest/tinkoff.public.invest.api.contract.v1.';
        // –ø—Ä–æ–¥–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
        // this.apiUrl = 'https://invest-public-api.tinkoff.ru:443/rest/tinkoff.public.invest.api.contract.v1.';
        // –†–∞–∑–ª–∏—á–∏—è: https://russianinvestments.github.io/investAPI/url_difference/

        this.headers = {
            Authorization: `Bearer ${this.apiToken}`,
            'Content-Type': 'application/json',
        };
    }


    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –≤—ã–∑–æ–≤–∞ –∫–æ–Ω–µ—á–Ω—ã—Ö —Ç–æ—á–µ–∫ API –¢–∏–Ω—å–∫–æ—Ñ—Ñ
    async callApi(endpoint, payload = {}) {
        try {
            const response = await axios.post(`${this.apiUrl}${endpoint}`, payload, {
                headers: this.headers,
            });
            // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            // logger.info(`–û—Ç–≤–µ—Ç –æ—Ç API –¢‚Äë–ë–∞–Ω–∫:\n ${JSON.stringify(response.data, null, 2)}`);
            return response.data;
        } catch (error) {            
            logger.error(`–û—à–∏–±–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤—ã–∑–æ–≤–∞ ${endpoint}:: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
        }
    }


    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É
    async getQuote(ticker) {
        try {
            const response = await axios.post(`${this.apiUrl}MarketDataService/GetLastPrices`, {
                figi: [ticker], // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –º–∞—Å—Å–∏–≤–∞ figi
            }, {
                headers: this.headers, // // –£–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
            });
            // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            // logger.info(`–û—Ç–≤–µ—Ç –æ—Ç API –¢‚Äë–ë–∞–Ω–∫:\n ${JSON.stringify(response.data, null, 2)}`);
            if (response.data.lastPrices && response.data.lastPrices.length > 0) {
                const priceData = response.data.lastPrices[0].price;
                const value = parseFloat(`${priceData.units}.${priceData.nano}`);
                return value;
            } else {
                throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ü–µ–Ω–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–∫–µ—Ä–∞.');
            }
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ª–æ—Ç–∞ - —ç—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏
    async getLot(figi) {
        try {
            const response = await axios.post(`${this.apiUrl}InstrumentsService/GetInstrumentBy`, {
                idType: "INSTRUMENT_ID_TYPE_FIGI",
                id: figi
            }, {
                headers: this.headers,
            });

            // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            if (response.data && response.data.instrument && response.data.instrument.lot) {
                const lotSize = response.data.instrument.lot; // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ—Ç–∞
                return lotSize;
            } else {
                throw new Error('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ—Ä–≥–æ–≤–æ–º –ª–æ—Ç–µ –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.');
            }
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –ª–æ—Ç–∞: ${error.response ? error.response.data : error.message}`);
            return 0; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º 0 –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–µ—á–µ–π –ø–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É
    // https://russianinvestments.github.io/investAPI/marketdata/#getcandlesrequest
    async getCandles(ticker, interval) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            const now = new Date().toISOString();
            // –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
            const from = calculateFromDate(interval);

            // –ó–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ—á–µ–π
            const response = await axios.post(`${this.apiUrl}MarketDataService/GetCandles`, {
                figi: ticker, // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
                from: from, // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞)
                to: now, // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è (—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è)
                interval: interval, // –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–≤–µ—á–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: CANDLE_INTERVAL_5_MIN, CANDLE_INTERVAL_HOUR, CANDLE_INTERVAL_DAY
                candleSourceType: 'CANDLE_SOURCE_UNSPECIFIED',
                limit: 1000 // –ú–∞–∫—Å–∏–º—É–º —Å–≤–µ—á–µ–π (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
            }, {
                headers: this.headers, // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            });
            // // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
            // logger.info(`–û—Ç–≤–µ—Ç –æ—Ç API –¢‚Äë–ë–∞–Ω–∫:\n ${JSON.stringify(response.data, null, 2)}`);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ —Å–≤–µ—á–∞—Ö
            if (response.data.candles && response.data.candles.length > 0) {
                return response.data.candles; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–≤–µ—á–∏
            } else {
                throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–≤–µ—á–∞—Ö –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–∫–µ—Ä–∞.');
            }
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–µ—á–µ–π: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
        }
    }


    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É
    // https://russianinvestments.github.io/investAPI/get_tech_indicators/
    async getTechIndicators(instrumentUid, indicatorType, interval, typeOfPrice, length) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            const now = new Date().toISOString();
            // –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
            const from = calculateIndicatorFromDate(interval);

            // –ó–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
            const response = await axios.post(`${this.apiUrl}MarketDataService/GetTechAnalysis`, {
                indicatorType: indicatorType || "INDICATOR_TYPE_UNSPECIFIED", // –¢–∏–ø –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞:
                // Simple Moving Average ‚Äî –ø—Ä–æ—Å—Ç–æ–µ —Å–∫–æ–ª—å–∑—è—â–µ–µ —Å—Ä–µ–¥–Ω–µ–µ: INDICATOR_TYPE_SMA
                // Exponential Moving Average ‚Äî EMA, —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —Å–∫–æ–ª—å–∑—è—â–∞—è —Å—Ä–µ–¥–Ω—è—è: INDICATOR_TYPE_EMA
                // Bollinger Bands ‚Äî –ª–∏–Ω–∏—è –ë–æ–ª–ª–∏–Ω–∂–µ—Ä–∞: INDICATOR_TYPE_BB
                // Relative Strength Index ‚Äî –∏–Ω–¥–µ–∫—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–ª—ã: INDICATOR_TYPE_RSI
                instrumentUid: instrumentUid, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
                from: from, // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞)
                to: now, // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è (—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è)
                interval: interval || "INDICATOR_INTERVAL_UNSPECIFIED",
                // –ò–Ω—Ç–µ—Ä–≤–∞–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä: 
                // INDICATOR_INTERVAL_FIVE_MINUTES
                // INDICATOR_INTERVAL_ONE_HOUR
                // INDICATOR_INTERVAL_ONE_DAY
                typeOfPrice: typeOfPrice || "TYPE_OF_PRICE_UNSPECIFIED", // –¢–∏–ø —Ü–µ–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–∫—Ä—ã—Ç–∏–µ, –æ—Ç–∫—Ä—ã—Ç–∏–µ)
                length: length, // –î–ª–∏–Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –¥–ª—è SMA ‚Äî –ø—Ä–æ—Å—Ç–∞—è —Å–∫–æ–ª—å–∑—è—â–∞—è —Å—Ä–µ–¥–Ω—è—è –∏–ª–∏ EMA ‚Äî —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è (—Å–∫–æ–ª—å–∑—è—â–∞—è) —Å—Ä–µ–¥–Ω—è—è                
                // deviation: {
                //     deviationMultiplier: {
                //         nano: 0,
                //         units: 2
                //     } // –ú–Ω–æ–∂–∏—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è Bollinger Bands INDICATOR_TYPE_BB
                // },
                // smoothing: {
                //     fastLength: 12, // –ë—ã—Å—Ç—Ä–∞—è –¥–ª–∏–Ω–∞ –¥–ª—è MACD –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ ¬´–°—Ö–æ–∂–¥–µ–Ω–∏–µ-—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–∫–æ–ª—å–∑—è—â–∏—Ö —Å—Ä–µ–¥–Ω–∏—Ö¬ª INDICATOR_TYPE_MACD
                //     slowLength: 26, // –ú–µ–¥–ª–µ–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –¥–ª—è MACD –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ ¬´–°—Ö–æ–∂–¥–µ–Ω–∏–µ-—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–∫–æ–ª—å–∑—è—â–∏—Ö —Å—Ä–µ–¥–Ω–∏—Ö¬ª INDICATOR_TYPE_MACD
                //     signalSmoothing: 9 // –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ MACD –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ ¬´–°—Ö–æ–∂–¥–µ–Ω–∏–µ-—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–∫–æ–ª—å–∑—è—â–∏—Ö —Å—Ä–µ–¥–Ω–∏—Ö¬ª INDICATOR_TYPE_MACD
                // }
            }, {
                headers: this.headers, // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            });

            // // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
            // logger.info(`–û—Ç–≤–µ—Ç –æ—Ç API –¢‚Äë–ë–∞–Ω–∫:\n ${JSON.stringify(response.data, null, 2)}`);
            // response.data.technicalIndicators.forEach((indicator) => {                
            //     logger.info(`–î–∞—Ç–∞: ${indicator.timestamp}, –ó–Ω–∞—á–µ–Ω–∏–µ: ${indicator.signal.units}.${indicator.signal.nano}`);
            // });

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞—Ö
            if (response.data.technicalIndicators && response.data.technicalIndicators.length > 0) {
                return response.data.technicalIndicators; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
            } else {
                throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞—Ö –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.');
            }
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
            return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        }
    }


    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
    // –ü–ï–†–ï–î–ï–õ–ê–¢–¨ InstrumentsService/GetInstrumentBy –ü–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ.
    async getName(ticker) {
        try {
            const response = await axios.post(`${this.apiUrl}InstrumentsService/FindInstrument`, {
                "query": ticker,
                "instrumentKind": "INSTRUMENT_TYPE_SHARE"
            }, {
                headers: this.headers, // –£–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
            });
            // // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            // logger.info(`–û—Ç–≤–µ—Ç –æ—Ç API –¢‚Äë–ë–∞–Ω–∫:\n ${JSON.stringify(response.data, null, 2)}`);
            if (response.data.instruments && response.data.instruments.length > 0) {
                const instrument = response.data.instruments[0];
                const name = instrument.name;
                const ticker = instrument.ticker;
                const uid = instrument.uid;
                return {
                    nameCombination: `${name} (${ticker})`, // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∏–º–µ–Ω–∏ –∏ —Ç–∏–∫–µ—Ä–∞
                    uid: uid,
                    ticker: ticker
                };
            } else {
                throw new Error('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
            }
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
        }
    }


    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –±–∏—Ä–∂–∏
    async getExchangeOpen() {
        try {
            const response = await axios.post(`${this.apiUrl}InstrumentsService/TradingSchedules`, {}, {
                headers: this.headers,
            });
            // // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            // logger.info(`–û—Ç–≤–µ—Ç –æ—Ç API –¢‚Äë–ë–∞–Ω–∫:\n ${JSON.stringify(response.data, null, 2)}`);

            // –ï—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –æ—Ç–≤–µ—Ç?
            if (!response.data) {
                logger.info('–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ —Ä–µ–∂–∏–º–µ —Ç–æ—Ä–≥–æ–≤.');
                return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false, –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ —Ä–µ–∂–∏–º–µ —Ç–æ—Ä–≥–æ–≤
            }

            // –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º MOEX_PLUS_WEEKEND
            const exchange = response.data.exchanges.find(e => e.exchange === "MOEX_PLUS_WEEKEND");
            if (!exchange) {
                logger.error('MOEX_PLUS_WEEKEND –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç–µ.');
                return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false, –µ—Å–ª–∏ –±–∏—Ä–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            }
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è —Ç–æ—Ä–≥–æ–≤—ã–π –¥–µ–Ω—å
            const today = exchange.days.find(day => day.isTradingDay);
            if (!today) {
                logger.info('–°–µ–≥–æ–¥–Ω—è –Ω–µ —Ç–æ—Ä–≥–æ–≤—ã–π –¥–µ–Ω—å.');
                return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false, –µ—Å–ª–∏ –Ω–µ —Ç–æ—Ä–≥–æ–≤—ã–π –¥–µ–Ω—å
            }
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            const currentTime = new Date().toISOString();
            const regularSessions = today.intervals.filter(session =>
                session.type === "regular_trading_session" || session.type === "regular_trading_session_evening"
            );
            // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏
            for (const session of regularSessions) {
                const {
                    startTs,
                    endTs
                } = session.interval;
                if (currentTime >= startTs && currentTime <= endTs) {
                    logger.info(`–ë–∏—Ä–∂–∞ –æ—Ç–∫—Ä—ã—Ç–∞. –°–µ–π—á–∞—Å –∏–¥–µ—Ç —Å–µ—Å—Å–∏—è: ${session.type}.`);
                    return true; // –ë–∏—Ä–∂–∞ –æ—Ç–∫—Ä—ã—Ç–∞
                }
            }
            logger.info('–ë–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞.');
            return false; // –ë–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –±–∏—Ä–∂–∏: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
            return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        }
    }


    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –æ—Ä–¥–µ—Ä–∞
    async placeMarketOrder(figi, quantity, direction) {
        const instrument = await this.getName(figi);
        const instrumentUid = instrument.uid;
        const accountId = secrets.AccountID;

        try {
            const orderParams = {
                figi: figi,
                quantity: quantity,
                direction: direction, // "ORDER_DIRECTION_BUY" –∏–ª–∏ "ORDER_DIRECTION_SELL"
                accountId: accountId,
                orderType: "ORDER_TYPE_MARKET",
                instrumentId: instrumentUid
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É OrdersService/PostOrder
            const response = await axios.post(`${this.apiUrl}OrdersService/PostOrder`, orderParams, {
                headers: this.headers,
            });

            logger.warn(`–û–ø–µ—Ä–∞—Ü–∏—è ${direction === "ORDER_DIRECTION_BUY" ? "–ø–æ–∫—É–ø–∫–∏" : "–ø—Ä–æ–¥–∞–∂–∏"} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –¥–ª—è ${instrument.nameCombination} (${figi}).`);
            logger.info(`–î–µ—Ç–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏:\n ${JSON.stringify(response.data, null, 2)}`);

            // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            logger.info(`–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä ${direction === "ORDER_DIRECTION_BUY" ? "–ø–æ–∫—É–ø–∫–∏" : "–ø—Ä–æ–¥–∞–∂–∏"}: ${response.data.orderId}.`);
            logger.info(`–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–¥–µ–ª–∫–∏: ${formatPrice(response.data.initialOrderPrice.units, response.data.initialOrderPrice.nano)} —Ä—É–±.`);
            logger.info(`–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç. ${instrument.nameCombination}: ${formatPrice(response.data.executedOrderPrice.units, response.data.executedOrderPrice.nano)} —Ä—É–±.`);
            logger.info(`–ö–æ–º–∏—Å—Å–∏—è –∑–∞ —Å–¥–µ–ª–∫—É: ${formatPrice(response.data.initialCommission.units, response.data.initialCommission.nano)} —Ä—É–±.`);

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏
            return formatPrice(response.data.executedOrderPrice.units, response.data.executedOrderPrice.nano); 
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ –æ—Ä–¥–µ—Ä–∞ ${figi}: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
            return 0
        }
    }


    // –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ —Å—á—ë—Ç—É
    async getPortfolio() {
        try {
            const payload = {
                accountId: secrets.AccountID,
                currency: "RUB" // –í–∞–ª—é—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, RUB)
            };

            // –í—ã–∑–æ–≤ API —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
            const response = await this.callApi('OperationsService/GetPortfolio', payload, {
                headers: this.headers, // –£–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
            });

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
            return response;
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: ${error.response ? JSON.stringify(error.response.data, null, 2) : error.message}`);
        }
    }


}
module.exports = TinkoffClient;


// –í—ã–≤–æ–¥–∏–º —Ü–µ–Ω—É –∫–æ–≥–¥–∞ –Ω–∞–¥–æ —É—á–µ—Å—Ç—å —á—Ç–æ units –∏ nano —ç—Ç–æ —Ü–µ–ª–æ–µ –∏ –¥—Ä–æ–±–Ω—ã–µ —á–∞—Å—Ç–∏ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞
function formatPrice(units, nano) {
    return parseFloat(`${units}.${nano}`)
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å–≤–µ—á–µ–π –¥–ª—è getCandles(ticker, interval) 
function calculateFromDate(interval) {
    const now = new Date();

    switch (interval) {
        case "CANDLE_INTERVAL_5_MIN":
            return new Date(now.setDate(now.getDate() - 1)).toISOString(); // –û—Ç–Ω–∏–º–∞–µ–º 1 –¥–µ–Ω—å –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ 5 –º–∏–Ω—É—Ç
        case "CANDLE_INTERVAL_HOUR":
            return new Date(now.setDate(now.getDate() - 7)).toISOString(); // –û—Ç–Ω–∏–º–∞–µ–º 1 –Ω–µ–¥–µ–ª—é –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —á–∞—Å
        case "CANDLE_INTERVAL_DAY":
            return new Date(now.setFullYear(now.getFullYear() - 1)).toISOString(); // –û—Ç–Ω–∏–º–∞–µ–º 1 –≥–æ–¥ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–µ–Ω—å
        default:
            throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–≤–µ—á–µ–π');
    }
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ getTechIndicators(instrumentUid, indicatorType, interval, typeOfPrice)
function calculateIndicatorFromDate(interval) {
    const now = new Date();

    switch (interval) {
        case "INDICATOR_INTERVAL_FIVE_MINUTES":
            return new Date(now.setDate(now.getDate() - 1)).toISOString(); // –û—Ç–Ω–∏–º–∞–µ–º 1 –¥–µ–Ω—å –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ 5 –º–∏–Ω—É—Ç
        case "INDICATOR_INTERVAL_ONE_HOUR":
            return new Date(now.setDate(now.getDate() - 7)).toISOString(); // –û—Ç–Ω–∏–º–∞–µ–º 1 –Ω–µ–¥–µ–ª—é –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —á–∞—Å
        case "INDICATOR_INTERVAL_ONE_DAY":
            return new Date(now.setFullYear(now.getFullYear() - 1)).toISOString(); // –û—Ç–Ω–∏–º–∞–µ–º 1 –≥–æ–¥ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–µ–Ω—å
        default:
            throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞');
    }
}